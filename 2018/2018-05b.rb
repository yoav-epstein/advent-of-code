str = ""

def reduce(str)
  prev = ''
  new_str = ''
  str << ' '
  str.each_char do |char|
    if prev.upcase == char.upcase && prev != char
      prev = ''
    else
      new_str << prev
      prev = char
    end
  end
  new_str
end

def reduce_all(str)
  length = str.length
  loop do
    new_str = reduce(str)
    new_length = new_str.length
    break if new_length == length

    length = new_length
    str = new_str
  end
  length
end

def remove_letter(str, letter)
  new_str = ''
  str.each_char do |char|
    new_str << char unless char.downcase == letter
  end
  new_str
end

hash = {}
('a'..'z').each do |letter|
  print letter
  str_without_letter = remove_letter(str, letter)
  hash[letter] = reduce_all(str_without_letter)
end
puts
puts hash.inspect

puts(hash.min_by { |k, v| v })
